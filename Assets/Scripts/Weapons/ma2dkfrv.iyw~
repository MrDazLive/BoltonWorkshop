using System.Collections;
using System.Linq;
using UnityEngine;

[RequireComponent(typeof(Magazine))]
public class Minigun : MonoBehaviour, IWeapon
{
  private Magazine m_magazine;

  private float m_fireRate = 0.0f;
  private float m_minFireRate = 0.8f;
  private float m_maxFireRate = 0.02f;
  private float m_spinUpTime = 5.0f;

  private bool m_canFire = true;
  private bool m_shooting = false;

  public void OnTriggerDown(eTrigger triggerType)
  {
    m_shooting = true;
  }

  public void OnTriggerHold(eTrigger triggerType)
  {
    m_fireRate -= Time.deltaTime / m_spinUpTime;
    m_fireRate = Mathf.Max(m_maxFireRate, m_fireRate);
    if (m_canFire)
      m_magazine.Fire(Shoot);
  }

  public void OnTriggerRelease(eTrigger triggerType)
  {
    m_shooting = false;
  }

  // Start is called before the first frame update
  void Start()
  {
    m_magazine = GetComponent<Magazine>();
  }

  // Update is called once per frame
  void Update()
  {
    if (Input.GetMouseButtonDown(0))
      OnTriggerDown(eTrigger.PRIMARY);
    if (Input.GetMouseButton(0))
      OnTriggerHold(eTrigger.PRIMARY);
    if (Input.GetMouseButtonUp(0))
      OnTriggerRelease(eTrigger.PRIMARY);

    if (!m_shooting || m_magazine.IsReloading)
      m_fireRate = Mathf.Min(m_minFireRate, m_fireRate + (Time.deltaTime / 2));
  }

  private IEnumerator CoolDownAsync()
  {
    m_canFire = false;
    yield return new WaitForSeconds(m_fireRate);
    m_canFire = true;
  }

  private void Shoot()
  {
    var player = gameObject.transform.parent;
    var hits = Physics.RaycastAll(player.position + (player.forward * 5), player.forward);
    var hit = hits.OrderBy(hit => hit.distance).FirstOrDefault().collider?.gameObject;

    if (hit && hit.TryGetComponent(out Target target))
    {
      target.DealDamage(0.01f);
    }

    StartCoroutine(nameof(CoolDownAsync));
  }
}
